/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import com.sun.java.accessibility.util.AWTEventMonitor;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import listeners.DrawingPanelListener;
import shapes.Shape;

/**
 *
 * @author Bane
 */
public class DrawingPanel extends javax.swing.JPanel {
    private final Color backgroundColor = new Color(255,255,255);
    private ArrayList<Shape> drawingPanelShapeList;
    private final int width = 800, height=480;
    public DrawingPanel() {
        initComponents();
        drawingPanelShapeList = new ArrayList<>();
        setBackground(backgroundColor);
        setSize(width,height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        for(Shape s : drawingPanelShapeList){
            s.draw(g);
        }
    }

    public ArrayList<Shape> getDrawingPanelShapeList() {
        return drawingPanelShapeList;
    }

    public void setDrawingPanelShapeList(ArrayList<Shape> drawingPanelShapeList) {
        this.drawingPanelShapeList = drawingPanelShapeList;
    }

    public void addDrawingPanelListener(DrawingPanelListener drawingPanelListener) {
        AWTEventMonitor.addActionListener(drawingPanelListener);
        addMouseListener(drawingPanelListener);
        addMouseMotionListener(drawingPanelListener);
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
